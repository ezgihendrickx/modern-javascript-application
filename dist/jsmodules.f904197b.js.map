{"version":3,"sources":["jsmodules/dateBuilder.js","jsmodules/applyIcon.js","mychart.js","jsmodules/displayResults.js","jsmodules/getResults.js","jsmodules/calcLonLat.js","jsmodules/getLocation.js","jsmodules/setQuery.js","jsmodules/index.js"],"names":["dateBuilder","d","months","day","getDay","date","getDate","month","getMonth","year","getFullYear","applyIcon","icon","selectedIcon","myChart","ctx","document","getElementById","getContext","Chart","type","data","labels","dayArray","datasets","label","backgroundColor","borderColor","tempArray","options","displayResults","weather","querySelector","innerText","locationName","now","Date","innerHTML","Math","round","current","temp","main","feels_like","Array","daily","forEach","name","dt","dayBlock","createElement","push","console","log","className","appendChild","api","key","base","getResults","location","fetch","latitude","longitude","then","json","searchbox","value","calcLonLat","items","position","lat","lng","title","hereAPIKey","getLocation","city","style","display","FORECAST","getElementsByClassName","setQuery","evt","keyCode","addEventListener"],"mappings":"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","file":"jsmodules.f904197b.js","sourceRoot":"..","sourcesContent":["export function dateBuilder(d) {\n  let months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"june\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"November\",\n    \"December\",\n  ];\n  let days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n\n  let day = days[d.getDay()];\n  let date = d.getDate();\n  let month = months[d.getMonth()];\n  let year = d.getFullYear();\n\n  return `${day} ${date} ${month} ${year}`;\n}\n","export function applyIcon(icon) {\n  //choose the correct icon\n  let selectedIcon;\n  switch (icon) {\n    case \"01d\":\n      selectedIcon = \"wi-day-sunny\";\n      break;\n    case \"01n\":\n      selectedIcon = \"wi-night-clear\";\n      break;\n    case \"02d\":\n    case \"02n\":\n      selectedIcon = \"wi-cloudy\";\n      break;\n    case \"03d\":\n    case \"03n\":\n    case \"04d\":\n    case \"04n\":\n      selectedIcon = \"wi-night-cloudy\";\n      break;\n    case \"09d\":\n    case \"09n\":\n      selectedIcon = \"wi-showers\";\n      break;\n    case \"10d\":\n    case \"10n\":\n      selectedIcon = \"wi-rain\";\n      break;\n    case \"11d\":\n    case \"11n\":\n      selectedIcon = \"wi-thunderstorm\";\n      break;\n    case \"13d\":\n    case \"13n\":\n      selectedIcon = \"wi-snow\";\n      break;\n    case \"50d\":\n    case \"50n\":\n      selectedIcon = \"wi-fog\";\n      break;\n    default:\n      selectedIcon = \"wi-meteor\";\n  }\n  return selectedIcon;\n}\n","import { tempArray, dayArray } from \"./jsmodules/displayResults.js\";\nexport function myChart() {\n  let ctx = document.getElementById(\"myChart\").getContext(\"2d\");\n  let chart = new Chart(ctx, {\n    // The type of chart we want to create\n    type: \"line\",\n\n    // The data for our dataset\n    data: {\n      labels: dayArray,\n      datasets: [\n        {\n          label: \"Ezgi's Chart\",\n          backgroundColor: \"rgb(132, 99, 255)\",\n          borderColor: \"rgb(132, 99, 255)\",\n          data: tempArray,\n        },\n      ],\n    },\n\n    // Configuration options go here\n    options: {},\n  });\n}\n","import { locationName } from \"./calcLonLat.js\";\nimport { dateBuilder } from \"./dateBuilder.js\";\nimport { applyIcon } from \"./applyIcon.js\";\nimport { FORECAST } from \"./setQuery.js\";\nexport let tempArray;\nexport let dayArray;\nimport { myChart } from \"../mychart.js\";\n//export let dayArray = new Array();\nexport function displayResults(weather) {\n  //shows everything in HTML\n  //   console.log(weather);\n  let city = document.querySelector(\".location .city\");\n\n  city.innerText = locationName;\n\n  let now = new Date();\n  // console.log(now);\n  let date = document.querySelector(\".location .date\");\n  date.innerText = dateBuilder(now); //show the date\n\n  let temp = document.querySelector(\".current .temp\");\n  // console.log(temp);\n  temp.innerHTML = `${Math.round(weather.current.temp)}<span>°c</span>`; //get the temp from json\n\n  let weather_el = document.querySelector(\".current .weather\");\n  weather_el.innerText = weather.current.weather[0].main; //weather description\n  let hilow = document.querySelector(\".hi-low\"); //feels like?\n  hilow.innerText =\n    \"feels like \" + Math.round(weather.current.feels_like) + \"°c\";\n  tempArray = new Array();\n  dayArray = new Array();\n  weather.daily.forEach((day) => {\n    //change this later 5 days, this loop gives me 1 week weatherforecast\n    // console.log(day);\n    let date = new Date(day.dt * 1000); //to get actual date from it you need to calc\n    let days = [\"Sun\", \"Mon\", \"Tues\", \"Wed\", \"Thurs\", \"Fri\", \"Sat\"];\n    let name = days[date.getDay()];\n    let dayBlock = document.createElement(\"div\");\n\n    dayArray.push(name);\n    tempArray.push(day.temp.day);\n    console.log(tempArray);\n    console.log(dayArray);\n    dayBlock.className = \"forecast__item\"; //for icons temp actions\n    dayBlock.innerHTML = `<div class=\"forecast-item__heading\">${name}</div>\n          <div class=\"forecast-item__info\"><i class=\"wi ${applyIcon(\n            day.weather[0].icon\n          )}\"></i> <span class=\"degrees\">${Math.round(\n      day.temp.day\n    )}<i class=\"wi wi-degrees\"></i></span></div>`;\n    FORECAST.appendChild(dayBlock); //puttin in the HTML\n  });\n  myChart();\n}\n","import { latitude, longitude } from \"./calcLonLat.js\";\nimport { displayResults } from \"./displayResults.js\";\nconst api = {\n  key: \"254457a64f43903cef73c88f6d1f45fa\",\n  base: \"https://api.openweathermap.org/data/2.5/\",\n};\nexport function getResults(location) {\n  // console.log(latitude);\n  fetch(\n    `${api.base}onecall?lat=${latitude}&lon=${longitude}&exlude=hourly&units=metric&APPID=${api.key}` //getting the weather\n  )\n    .then((weather) => {\n      return weather.json(); //from json file\n    })\n    .then(displayResults);\n}\n","//import { searchbox } from \"./setQuery.js\";\nimport { getResults } from \"./getResults.js\";\nconst searchbox = document.querySelector(\".search\");\nexport let locationName = searchbox.value;\nexport let latitude;\nexport let longitude;\nexport function calcLonLat(items) {\n  //check it out above link  line 2\n  latitude = items.items[0].position.lat;\n  longitude = items.items[0].position.lng;\n  locationName = items.items[0].title;\n  getResults(latitude, longitude);\n}\n","import { calcLonLat } from \"./calcLonLat.js\";\nlet hereAPIKey = \"HY42AIbJoZSVlGRz0Dn-eea-HjU-Kj1GWDLq3pp1GH4\"; // heremaps for the location\nexport function getLocation(city) {\n  document.getElementById(\"spinner\").style.display = \"block\";\n  fetch(\n    `https://geocode.search.hereapi.com/v1/geocode?q=${city}&apiKey=${hereAPIKey}` //getting the location of the city\n  )\n    .then((items) => {\n      document.getElementById(\"spinner\").style.display = \"none\";\n      return items.json();\n    })\n    .then(calcLonLat);\n  // console.log(calcLonLat());\n}\n","export { FORECAST, searchbox };\nimport { getLocation } from \"./getLocation.js\";\n// import { myChart } from \"../mychart.js\";\n\nconst FORECAST = document.getElementsByClassName(\"component__forecast-box\")[0]; // <div class=\"component__forecast-box\"></div> getting this from HTML\nconst searchbox = document.querySelector(\".search\");\n\nexport function setQuery(evt) {\n  //if you press the enter\n  if (evt.keyCode == 13) {\n    FORECAST.innerHTML = \"\"; //empty the html forecast table\n\n    getLocation(searchbox.value); // check line 7 for that\n\n    // console.log(searchbox.value);\n  }\n}\n","// import { getLocation } from \"./getLocation.js\";\n// import { calcLonLat } from \"./calcLonLat.js\";\nimport { setQuery } from \"./setQuery.js\";\nimport { myChart } from \"../mychart.js\";\n// import { getResults } from \"./getResults.js\";\n// import { displayResults } from \"./displayResults.js\";\n// import { dateBuilder } from \"./dateBuilder.js\";\n// import { applyIcon } from \"./applyIcon.js\";\nimport { searchbox } from \"./setQuery.js\";\nsearchbox.addEventListener(\"keypress\", setQuery); //when you enter of this input this function\n// document.getElementById(\"spinner\").style.display = \"block\";\n// document.getElementById(\"spinner\").style.display = \"none\";\n"]}